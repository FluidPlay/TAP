#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  rflare, lflare, body, turret, feetparent, FLFoot, FRFoot, RLFoot,
       RRFoot, rightchunk, leftchunk, faceguard, Lgun, Rgun, Rbarrel, Lbarrel,
       hips, knobs, stand1, stand2, stand3, gun1, gun2, gun3,
       flare1, flare2, flare3;

static-var  bMoving, Static_Var_2, Static_Var_3, restore_delay, Static_Var_5,
            Static_Var_6, Static_Var_7, wpn1_lasthead, wpn2_lasthead, wpn3_lasthead, wpn4_lasthead;

walk()
{
	while ( TRUE )
	{
	if( bmoving )
	{
		move feetparent to z-axis [-2.250000] speed 2 * [1];
		move FLFoot to x-axis [-2.250000] speed 2 * [1];
		move FLFoot to y-axis [0.900009] speed 2 * [1];
		move FLFoot to z-axis [0.075012] speed 2 * [1];
		move FLFoot to z-axis [-0.924957] speed 2 * [6.097549];
		move FRFoot to x-axis [2.250000] speed 2 * [1];
		move FRFoot to y-axis [0.900009] speed 2 * [1];
		move FRFoot to z-axis [5.700012] speed 2 * [1];
		move FRFoot to z-axis [8.825012] speed 2 * [19.054825];
		move RLFoot to x-axis [-2.250000] speed 2 * [1];
		move RLFoot to y-axis [0.900009] speed 2 * [1];
		move RLFoot to z-axis [-1.700012] speed 2 * [1];
		move RLFoot to z-axis [-3.324997] speed 2 * [9.908447];
		move RRFoot to x-axis [2.250000] speed 2 * [1];
		move RRFoot to y-axis [0.900009] speed 2 * [1];
		move RRFoot to z-axis [-3.450012] speed 2 * [1];
		move RRFoot to z-axis [-4.325012] speed 2 * [5.335342];
		move rightchunk to x-axis [1.424957] speed 2 * [1];
		move rightchunk to y-axis [3.224930] speed 2 * [1];
		move rightchunk to z-axis [-0.750000] speed 2 * [1];
		move leftchunk to x-axis [-1.424957] speed 2 * [1];
		move leftchunk to y-axis [3.224930] speed 2 * [1];
		move leftchunk to z-axis [-0.750000] speed 2 * [1];
		move faceguard to x-axis [0.037430] speed 2 * [1];
		move faceguard to y-axis [0.299957] speed 2 * [1];
		move faceguard to z-axis [-0.075027] speed 2 * [1];
		move Lgun to x-axis [-0.187500] speed 2 * [1];
		move Lgun to y-axis [0.299957] speed 2 * [1];
		move Lgun to z-axis [1.275009] speed 2 * [1];
		move Rgun to x-axis [0.262497] speed 2 * [1];
		move Rgun to y-axis [0.299957] speed 2 * [1];
		move Rgun to z-axis [1.275009] speed 2 * [1];
		move Rbarrel to z-axis [0.750000] speed 2 * [1];
		move Lbarrel to z-axis [0.750000] speed 2 * [1];
		turn hips to y-axis <-1.516484> speed 2 * <1>;
		turn hips to y-axis <3.791209> speed 2 * <32.423077>;
		turn FRFoot to x-axis <-17.846154> speed 2 * <1>;
		turn FRFoot to x-axis <-14.813187> speed 2 * <18.527473>;
		turn rightchunk to x-axis <-7.967033> speed 2 * <1>;
		turn rightchunk to x-axis <-11.390110> speed 2 * <20.835165>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [3.700012] speed 2 * [28.030304];
		move FRFoot to z-axis [8.700012] speed 2 * [0.757507];
		move RLFoot to z-axis [-4.075012] speed 2 * [4.545486];
		move RRFoot to z-axis [-4.075012] speed 2 * [1.515182];
		turn hips to y-axis <2.269231> speed 2 * <9.203297>;
		turn FLFoot to x-axis <-12.912088> speed 2 * <78.269231>;
		turn FRFoot to x-axis <0.758242> speed 2 * <94.379121>;
		turn RRFoot to x-axis <9.868132> speed 2 * <59.846154>;
		turn rightchunk to x-axis <-0.379121> speed 2 * <66.758242>;
		turn leftchunk to x-axis <-5.692308> speed 2 * <34.527473>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [7.075012] speed 2 * [20.331314];
		move FRFoot to z-axis [6.325012] speed 2 * [14.307190];
		move RLFoot to z-axis [-5.199997] speed 2 * [6.777069];
		move RRFoot to z-axis [-3.950012] speed 2 * [0.752945];
		turn hips to y-axis <-1.890110> speed 2 * <25.159341>;
		turn FLFoot to x-axis <-30.379121> speed 2 * <105.247253>;
		turn RRFoot to x-axis <15.571429> speed 2 * <34.313187>;
		turn rightchunk to x-axis <7.967033> speed 2 * <50.335165>;
		turn leftchunk to x-axis <-11.390110> speed 2 * <34.313187>;
		sleep 83;
	}
	if( bmoving )
	{
		move FRFoot to z-axis [5.825012] speed 2 * [3.030319];
		move RLFoot to z-axis [-6.199997] speed 2 * [6.060577];
		move RRFoot to z-axis [-1.450012] speed 2 * [15.151505];
		turn hips to y-axis <-2.269231> speed 2 * <2.291209>;
		turn FLFoot to x-axis <-18.989011> speed 2 * <69.060440>;
		turn RRFoot to x-axis <19.747253> speed 2 * <25.313187>;
		turn rightchunk to x-axis <1.890110> speed 2 * <36.824176>;
		turn leftchunk to x-axis <-6.835165> speed 2 * <27.615385>;
		sleep 83;
	}
	if( bmoving )
	{
		move FRFoot to z-axis [4.324997] speed 2 * [9.036102];
		move RLFoot to z-axis [-8.075012] speed 2 * [11.295197];
		move RRFoot to z-axis [1.549957] speed 2 * [18.072220];
		turn hips to y-axis <-1.516484> speed 2 * <4.571429>;
		turn FLFoot to x-axis <-0.758242> speed 2 * <109.824176>;
		turn RRFoot to x-axis <7.593407> speed 2 * <73.214286>;
		turn leftchunk to x-axis <0.000000> speed 2 * <41.181319>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [4.949997] speed 2 * [12.957336];
		move FRFoot to z-axis [1.700012] speed 2 * [16.006042];
		move RRFoot to z-axis [0.674957] speed 2 * [5.335342];
		turn hips to y-axis <0.000000> speed 2 * <9.258242>;
		turn FLFoot to x-axis <0.000000> speed 2 * <4.626374>;
		turn RLFoot to x-axis <22.401099> speed 2 * <136.648352>;
		turn RRFoot to x-axis <0.758242> speed 2 * <41.681319>;
		turn leftchunk to x-axis <9.115385> speed 2 * <55.582418>;
		sleep 164;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [3.824997] speed 2 * [6.777115];
		move FRFoot to z-axis [0.199997] speed 2 * [9.036102];
		move RLFoot to z-axis [-4.450012] speed 2 * [21.837341];
		move RRFoot to z-axis [-0.450012] speed 2 * [6.777115];
		turn hips to y-axis <1.137363> speed 2 * <6.857143>;
		turn RLFoot to x-axis <28.857143> speed 2 * <38.890110>;
		turn leftchunk to x-axis <10.247253> speed 2 * <6.857143>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [2.449997] speed 2 * [8.333282];
		move FRFoot to z-axis [-0.674957] speed 2 * [5.303009];
		move RLFoot to z-axis [-1.325012] speed 2 * [18.939392];
		move RRFoot to z-axis [-1.825012] speed 2 * [8.333282];
		turn hips to y-axis <-1.516484> speed 2 * <16.104396>;
		turn RLFoot to x-axis <10.247253> speed 2 * <112.791209>;
		turn leftchunk to x-axis <2.648352> speed 2 * <46.038462>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [2.074997] speed 2 * [2.258987];
		move FRFoot to z-axis [0.075012] speed 2 * [4.517975];
		move RLFoot to z-axis [0.924957] speed 2 * [13.554214];
		move RRFoot to z-axis [-2.324997] speed 2 * [3.012024];
		turn hips to y-axis <-1.890110> speed 2 * <2.280220>;
		turn FRFoot to x-axis <-10.247253> speed 2 * <66.357143>;
		turn RLFoot to x-axis <-0.379121> speed 2 * <64.060440>;
		turn rightchunk to x-axis <-1.137363> speed 2 * <18.302198>;
		turn leftchunk to x-axis <-2.648352> speed 2 * <32.027473>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [0.949997] speed 2 * [6.818176];
		move FRFoot to z-axis [3.074997] speed 2 * [18.181747];
		move RLFoot to z-axis [-1.075012] speed 2 * [12.121155];
		move RRFoot to z-axis [-3.449997] speed 2 * [6.818100];
		turn hips to y-axis <-2.269231> speed 2 * <2.291209>;
		turn FRFoot to x-axis <-12.527473> speed 2 * <13.802198>;
		turn rightchunk to x-axis <-4.170330> speed 2 * <18.412088>;
		sleep 83;
	}
	sleep 1;
	}
}

walklegs()
{
	while (TRUE)
	{
	if( bmoving )
	{
		move feetparent to z-axis [-2.250000] speed 2 * [1];
		move FLFoot to x-axis [-2.250000] speed 2 * [1];
		move FLFoot to y-axis [0.900009] speed 2 * [1];
		move FLFoot to z-axis [0.075012] speed 2 * [1];
		move FLFoot to z-axis [-0.924957] speed 2 * [6.097549];
		move FRFoot to x-axis [2.250000] speed 2 * [1];
		move FRFoot to y-axis [0.900009] speed 2 * [1];
		move FRFoot to z-axis [5.700012] speed 2 * [1];
		move FRFoot to z-axis [8.825012] speed 2 * [19.054825];
		move RLFoot to x-axis [-2.250000] speed 2 * [1];
		move RLFoot to y-axis [0.900009] speed 2 * [1];
		move RLFoot to z-axis [-1.700012] speed 2 * [1];
		move RLFoot to z-axis [-3.324997] speed 2 * [9.908447];
		move RRFoot to x-axis [2.250000] speed 2 * [1];
		move RRFoot to y-axis [0.900009] speed 2 * [1];
		move RRFoot to z-axis [-3.450012] speed 2 * [1];
		move RRFoot to z-axis [-4.325012] speed 2 * [5.335342];
		move rightchunk to x-axis [1.424957] speed 2 * [1];
		move rightchunk to y-axis [3.224930] speed 2 * [1];
		move rightchunk to z-axis [-0.750000] speed 2 * [1];
		move leftchunk to x-axis [-1.424957] speed 2 * [1];
		move leftchunk to y-axis [3.224930] speed 2 * [1];
		move leftchunk to z-axis [-0.750000] speed 2 * [1];
		move faceguard to x-axis [0.037430] speed 2 * [1];
		move faceguard to y-axis [0.299957] speed 2 * [1];
		move faceguard to z-axis [-0.075027] speed 2 * [1];
		move Lgun to x-axis [-0.187500] speed 2 * [1];
		move Lgun to y-axis [0.299957] speed 2 * [1];
		move Lgun to z-axis [1.275009] speed 2 * [1];
		move Rgun to x-axis [0.262497] speed 2 * [1];
		move Rgun to y-axis [0.299957] speed 2 * [1];
		move Rgun to z-axis [1.275009] speed 2 * [1];
		move Rbarrel to z-axis [0.750000] speed 2 * [1];
		move Lbarrel to z-axis [0.750000] speed 2 * [1];
		turn FRFoot to x-axis <-17.846154> speed 2 * <1>;
		turn FRFoot to x-axis <-14.813187> speed 2 * <18.527473>;
		turn rightchunk to x-axis <-7.967033> speed 2 * <1>;
		turn rightchunk to x-axis <-11.390110> speed 2 * <20.835165>;
		sleep 164;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [3.700012] speed 2 * [28.030304];
		move FRFoot to z-axis [8.700012] speed 2 * [0.757507];
		move RLFoot to z-axis [-4.075012] speed 2 * [4.545486];
		move RRFoot to z-axis [-4.075012] speed 2 * [1.515182];
		turn FLFoot to x-axis <-12.912088> speed 2 * <78.269231>;
		turn FRFoot to x-axis <0.758242> speed 2 * <94.379121>;
		turn RRFoot to x-axis <9.868132> speed 2 * <59.846154>;
		turn rightchunk to x-axis <-0.379121> speed 2 * <66.758242>;
		turn leftchunk to x-axis <-5.692308> speed 2 * <34.527473>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [7.075012] speed 2 * [20.331314];
		move FRFoot to z-axis [6.325012] speed 2 * [14.307190];
		move RLFoot to z-axis [-5.199997] speed 2 * [6.777069];
		move RRFoot to z-axis [-3.950012] speed 2 * [0.752945];
		turn FLFoot to x-axis <-30.379121> speed 2 * <105.247253>;
		turn RRFoot to x-axis <15.571429> speed 2 * <34.313187>;
		turn rightchunk to x-axis <7.967033> speed 2 * <50.335165>;
		turn leftchunk to x-axis <-11.390110> speed 2 * <34.313187>;
		sleep 83;
	}
	if( bmoving )
	{
		move FRFoot to z-axis [5.825012] speed 2 * [3.030319];
		move RLFoot to z-axis [-6.199997] speed 2 * [6.060577];
		move RRFoot to z-axis [-1.450012] speed 2 * [15.151505];
		turn FLFoot to x-axis <-18.989011> speed 2 * <69.060440>;
		turn RRFoot to x-axis <19.747253> speed 2 * <25.313187>;
		turn rightchunk to x-axis <1.890110> speed 2 * <36.824176>;
		turn leftchunk to x-axis <-6.835165> speed 2 * <27.615385>;
		sleep 83;
	}
	if( bmoving )
	{
		move FRFoot to z-axis [4.324997] speed 2 * [9.036102];
		move RLFoot to z-axis [-8.075012] speed 2 * [11.295197];
		move RRFoot to z-axis [1.549957] speed 2 * [18.072220];
		turn FLFoot to x-axis <-0.758242> speed 2 * <109.824176>;
		turn RRFoot to x-axis <7.593407> speed 2 * <73.214286>;
		turn leftchunk to x-axis <0.000000> speed 2 * <41.181319>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [4.949997] speed 2 * [12.957336];
		move FRFoot to z-axis [1.700012] speed 2 * [16.006042];
		move RRFoot to z-axis [0.674957] speed 2 * [5.335342];
		turn FLFoot to x-axis <0.000000> speed 2 * <4.626374>;
		turn RLFoot to x-axis <22.401099> speed 2 * <136.648352>;
		turn RRFoot to x-axis <0.758242> speed 2 * <41.681319>;
		turn leftchunk to x-axis <9.115385> speed 2 * <55.582418>;
		sleep 164;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [3.824997] speed 2 * [6.777115];
		move FRFoot to z-axis [0.199997] speed 2 * [9.036102];
		move RLFoot to z-axis [-4.450012] speed 2 * [21.837341];
		move RRFoot to z-axis [-0.450012] speed 2 * [6.777115];
		turn RLFoot to x-axis <28.857143> speed 2 * <38.890110>;
		turn leftchunk to x-axis <10.247253> speed 2 * <6.857143>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [2.449997] speed 2 * [8.333282];
		move FRFoot to z-axis [-0.674957] speed 2 * [5.303009];
		move RLFoot to z-axis [-1.325012] speed 2 * [18.939392];
		move RRFoot to z-axis [-1.825012] speed 2 * [8.333282];
		turn RLFoot to x-axis <10.247253> speed 2 * <112.791209>;
		turn leftchunk to x-axis <2.648352> speed 2 * <46.038462>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [2.074997] speed 2 * [2.258987];
		move FRFoot to z-axis [0.075012] speed 2 * [4.517975];
		move RLFoot to z-axis [0.924957] speed 2 * [13.554214];
		move RRFoot to z-axis [-2.324997] speed 2 * [3.012024];
		turn FRFoot to x-axis <-10.247253> speed 2 * <66.357143>;
		turn RLFoot to x-axis <-0.379121> speed 2 * <64.060440>;
		turn rightchunk to x-axis <-1.137363> speed 2 * <18.302198>;
		turn leftchunk to x-axis <-2.648352> speed 2 * <32.027473>;
		sleep 83;
	}
	if( bmoving )
	{
		move FLFoot to z-axis [0.949997] speed 2 * [6.818176];
		move FRFoot to z-axis [3.074997] speed 2 * [18.181747];
		move RLFoot to z-axis [-1.075012] speed 2 * [12.121155];
		move RRFoot to z-axis [-3.449997] speed 2 * [6.818100];
		turn FRFoot to x-axis <-12.527473> speed 2 * <13.802198>;
		turn rightchunk to x-axis <-4.170330> speed 2 * <18.412088>;
		sleep 83;
	}
	sleep 1;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn rightchunk to x-axis <0.000000> speed 2 * <150.027473>;
				turn RRFoot to x-axis <0.000000> speed 2 * <150.027473>;
				turn FRFoot to x-axis <0.000000> speed 2 * <150.027473>;
				turn leftchunk to x-axis <0.000000> speed 2 * <150.027473>;
				turn RLFoot to x-axis <0.000000> speed 2 * <150.027473>;
				turn FLFoot to x-axis <0.000000> speed 2 * <150.027473>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	hide rflare;
	hide lflare;
	hide flare1;
	hide flare2;
	hide flare3;
	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

RestoreAfterDelay()
{
	set-signal-mask 4;
	sleep restore_delay;
	turn turret to y-axis <0.000000> speed <50.000000>;
	turn Rgun to x-axis <0.000000> speed <30.000000>;
	turn Lgun to x-axis <0.000000> speed <30.000000>;
	turn gun1 to x-axis <0.000000> speed <30.000000>;
	turn gun1 to y-axis <0.000000> speed <30.000000>;
	turn gun2 to x-axis <0.000000> speed <30.000000>;
	turn gun2 to y-axis <0.000000> speed <30.000000>;
	turn gun3 to x-axis <0.000000> speed <30.000000>;
	turn gun3 to y-axis <0.000000> speed <30.000000>;
	wpn1_lasthead = 1000000;
	wpn2_lasthead = 1000000;
	wpn3_lasthead = 1000000;
	wpn4_lasthead = 1000000;
	Static_Var_2 = 0;
}

AimFromWeapon1(Func_Var_1)
{
	Func_Var_1 = 3;
}

QueryWeapon1(Func_Var_1)
{
	Func_Var_1 = Static_Var_5;
}

AimWeapon1(Func_Var_1, Func_Var_2)
{
	signal 4;
	Static_Var_2 = 1;
	turn turret to y-axis Func_Var_1 speed <90.000000>;
	turn Rgun to x-axis <0.000000> - Func_Var_2 speed <50.000000>;
	turn Lgun to x-axis <0.000000> - Func_Var_2 speed <50.000000>;
	if (((get ABS(wpn1_lasthead - Func_Var_1)) > 65536) OR(((get ABS(wpn1_lasthead - Func_Var_1)) > 5000) AND ((get ABS(wpn1_lasthead - Func_Var_1)) < 60536)))
	{
		wait-for-turn turret around y-axis;
		wait-for-turn Rgun around x-axis;
		wait-for-turn Lgun around x-axis;
	}
	wpn1_lasthead = Func_Var_1;
	start-script RestoreAfterDelay();
	return (1);
}


FireWeapon1()
{
	if( Static_Var_5 == 0 )
	{
		move Rbarrel to z-axis [-5.000000] now;
		show rflare;
		sleep 150;
		hide rflare;
		move Rbarrel to z-axis [0.000000] speed [10.000000];
	}
	if( Static_Var_5 == 1 )
	{
		move Lbarrel to z-axis [-5.000000] now;
		show lflare;
		sleep 150;
		hide lflare;
		move Lbarrel to z-axis [0.000000] speed [10.000000];
	}
	Static_Var_5 = !Static_Var_5;
}

AimWeapon2(Func_Var_1, Func_Var_2)
{
	signal 4;
	turn gun1 to y-axis Func_Var_1 speed <300.071429>;
	turn gun1 to x-axis <0.000000> - Func_Var_2 speed <200.038462>;
	if (((get ABS(wpn2_lasthead - Func_Var_1)) > 65536) OR(((get ABS(wpn2_lasthead - Func_Var_1)) > 5000) AND ((get ABS(wpn2_lasthead - Func_Var_1)) < 60536)))
	{
		wait-for-turn stand1 around y-axis;
		wait-for-turn gun1 around x-axis;
	}
	wpn2_lasthead = Func_Var_1;
	return (1);
}

FireWeapon2()
{
	set CHANGE_TARGET to 2;
	show flare1;
	sleep 150;
	hide flare1;
}

AimFromWeapon2(Func_Var_1)
{
	Func_Var_1 = 18;
}

QueryWeapon2(Func_Var_1)
{
	Func_Var_1 = 24;
}

AimWeapon3(Func_Var_1, Func_Var_2)
{
	signal 4;
	turn gun2 to y-axis Func_Var_1 speed <300.071429>;
	turn gun2 to x-axis <0.000000> - Func_Var_2 speed <200.038462>;
	if (((get ABS(wpn3_lasthead - Func_Var_1)) > 65536) OR(((get ABS(wpn3_lasthead - Func_Var_1)) > 5000) AND ((get ABS(wpn3_lasthead - Func_Var_1)) < 60536)))
	{
		wait-for-turn stand2 around y-axis;
		wait-for-turn gun2 around x-axis;
	}
	wpn3_lasthead = Func_Var_1;
	return (1);
}

FireWeapon3()
{
	set CHANGE_TARGET to 3;
	show flare2;
	sleep 150;
	hide flare2;
}

AimFromWeapon3(Func_Var_1)
{
	Func_Var_1 = 19;
}

QueryWeapon3(Func_Var_1)
{
	Func_Var_1 = 25;
}

AimWeapon4(Func_Var_1, Func_Var_2)
{
	signal 4;
	turn gun3 to y-axis Func_Var_1 speed <300.071429>;
	turn gun3 to x-axis <0.000000> - Func_Var_2 speed <200.038462>;
	if (((get ABS(wpn4_lasthead - Func_Var_1)) > 65536) OR(((get ABS(wpn4_lasthead - Func_Var_1)) > 5000) AND ((get ABS(wpn4_lasthead - Func_Var_1)) < 60536)))
	{
		wait-for-turn stand3 around y-axis;
		wait-for-turn gun3 around x-axis;
	}
	wpn4_lasthead = Func_Var_1;
	return (1);
}

FireWeapon4()
{
	set CHANGE_TARGET to 4;
	show flare3;
	sleep 150;
	hide flare3;
}

AimFromWeapon4(Func_Var_1)
{
	Func_Var_1 = 20;
}

QueryWeapon4(Func_Var_1)
{
	Func_Var_1 = 26;
}

Killed(severity, corpsetype)
{
	hide lflare;
	hide rflare;
	hide flare1;
	hide flare2;
	hide flare3;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode knobs type FALL | BITMAP3 | NOHEATCLOUD;
		explode Lbarrel type FALL | BITMAP4 | NOHEATCLOUD;
		explode lflare type FALL | BITMAP1 | NOHEATCLOUD;
		explode Lgun type FALL | BITMAP2 | NOHEATCLOUD;
		explode Rbarrel type FALL | BITMAP3 | NOHEATCLOUD;
		explode rflare type FALL | BITMAP4 | NOHEATCLOUD;
		explode Rgun type FALL | BITMAP5 | NOHEATCLOUD;
		explode turret type FALL | BITMAP4 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type SHATTER | BITMAP1 | NOHEATCLOUD;
		explode knobs type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode Lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode lflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
		explode Lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
		explode Rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode rflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode Rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode body type SHATTER | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode knobs type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode Lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	explode lflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1 | NOHEATCLOUD;
	explode Lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode Rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode rflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	explode Rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	return corpsetype;
}
